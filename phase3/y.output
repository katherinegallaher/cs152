Terminals which are not used

   ELSEIF
   ELSE_PREC
   IF_PREC


Grammar

    0 $accept: prog_start $end

    1 prog_start: /* empty */

    2 @1: /* empty */

    3 prog_start: PROGRAM IDENT @1 SEMICOLON block END_PROGRAM

    4 @2: /* empty */

    5 block: declarations BEGIN_PROGRAM @2 statements

    6 declarations: declaration SEMICOLON declarations
    7             | /* empty */

    8 declaration: IDENT more_idents COLON ARRAY L_PAREN NUMBER R_PAREN OF INTEGER
    9            | IDENT more_idents COLON INTEGER

   10 more_idents: COMMA IDENT more_idents
   11            | /* empty */

   12 statements: statements statement SEMICOLON
   13           | statement SEMICOLON

   14 statement: Var ASSIGN expression

   15 @3: /* empty */

   16 statement: IF bool_exp THEN ststatement @3 optionalelse ENDIF

   17 @4: /* empty */

   18 @5: /* empty */

   19 statement: WHILE @4 bool_exp BEGINLOOP ststatement @5 ENDLOOP

   20 @6: /* empty */

   21 @7: /* empty */

   22 statement: DO BEGINLOOP @6 ststatement @7 ENDLOOP WHILE bool_exp

   23 @8: /* empty */

   24 statement: READ @8 Vars

   25 @9: /* empty */

   26 statement: WRITE @9 Vars
   27          | CONTINUE

   28 Vars: Vars COMMA Var
   29     | Var

   30 ststatement: statement SEMICOLON ststatement
   31            | /* empty */

   32 @10: /* empty */

   33 optionalelse: ELSE @10 ststatement
   34             | /* empty */

   35 bool_exp: relation_and_exp relationexplist

   36 relation_and_exp: relation_exp andlist

   37 relationexplist: OR relation_and_exp relationexplist
   38                | /* empty */

   39 andlist: AND relation_exp andlist
   40        | /* empty */

   41 relation_exp: NOT expression comp expression
   42             | NOT TRUE
   43             | NOT FALSE
   44             | NOT L_PAREN bool_exp R_PAREN
   45             | expression comp expression
   46             | TRUE
   47             | FALSE
   48             | L_PAREN bool_exp R_PAREN

   49 Var: IDENT
   50    | IDENT L_PAREN expression R_PAREN

   51 expression: multiplicative_exp exprlist

   52 multiplicative_exp: term terms

   53 term: Var
   54     | NUMBER
   55     | L_PAREN expression R_PAREN
   56     | SUB Var
   57     | SUB NUMBER
   58     | SUB L_PAREN expression R_PAREN

   59 terms: /* empty */
   60      | terms MULT term
   61      | terms DIV term
   62      | terms MOD term

   63 exprlist: ADD multiplicative_exp exprlist
   64         | SUB multiplicative_exp exprlist
   65         | /* empty */

   66 comp: EQ
   67     | NEQ
   68     | LT
   69     | GT
   70     | LTE
   71     | GTE


Terminals, with rules where they appear

$end (0) 0
error (256)
PROGRAM (258) 3
BEGIN_PROGRAM (259) 5
END_PROGRAM (260) 3
INTEGER (261) 8 9
ARRAY (262) 8
OF (263) 8
IF (264) 16
THEN (265) 16
ENDIF (266) 16
ELSE (267) 33
ELSEIF (268)
WHILE (269) 19 22
DO (270) 22
BEGINLOOP (271) 19 22
ENDLOOP (272) 19 22
CONTINUE (273) 27
READ (274) 24
WRITE (275) 26
NOT (276) 41 42 43 44
TRUE (277) 42 46
FALSE (278) 43 47
SEMICOLON (279) 3 6 12 13 30
COLON (280) 8 9
COMMA (281) 10 28
ASSIGN (282) 14
L_PAREN (283) 8 44 48 50 55 58
R_PAREN (284) 8 44 48 50 55 58
IDENT (285) 3 8 9 10 49 50
NUMBER (286) 8 54 57
GTE (287) 71
LTE (288) 70
GT (289) 69
LT (290) 68
NEQ (291) 67
EQ (292) 66
MOD (293) 62
DIV (294) 61
MULT (295) 60
ADD (296) 63
SUB (297) 56 57 58 64
AND (298) 39
OR (299) 37
ELSE_PREC (300)
IF_PREC (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
prog_start (48)
    on left: 1 3, on right: 0
@1 (49)
    on left: 2, on right: 3
block (50)
    on left: 5, on right: 3
@2 (51)
    on left: 4, on right: 5
declarations (52)
    on left: 6 7, on right: 5 6
declaration (53)
    on left: 8 9, on right: 6
more_idents (54)
    on left: 10 11, on right: 8 9 10
statements (55)
    on left: 12 13, on right: 5 12
statement (56)
    on left: 14 16 19 22 24 26 27, on right: 12 13 30
@3 (57)
    on left: 15, on right: 16
@4 (58)
    on left: 17, on right: 19
@5 (59)
    on left: 18, on right: 19
@6 (60)
    on left: 20, on right: 22
@7 (61)
    on left: 21, on right: 22
@8 (62)
    on left: 23, on right: 24
@9 (63)
    on left: 25, on right: 26
Vars (64)
    on left: 28 29, on right: 24 26 28
ststatement (65)
    on left: 30 31, on right: 16 19 22 30 33
optionalelse (66)
    on left: 33 34, on right: 16
@10 (67)
    on left: 32, on right: 33
bool_exp (68)
    on left: 35, on right: 16 19 22 44 48
relation_and_exp (69)
    on left: 36, on right: 35 37
relationexplist (70)
    on left: 37 38, on right: 35 37
andlist (71)
    on left: 39 40, on right: 36 39
relation_exp (72)
    on left: 41 42 43 44 45 46 47 48, on right: 36 39
Var (73)
    on left: 49 50, on right: 14 28 29 53 56
expression (74)
    on left: 51, on right: 14 41 45 50 55 58
multiplicative_exp (75)
    on left: 52, on right: 51 63 64
term (76)
    on left: 53 54 55 56 57 58, on right: 52 60 61 62
terms (77)
    on left: 59 60 61 62, on right: 52 60 61 62
exprlist (78)
    on left: 63 64 65, on right: 51 63 64
comp (79)
    on left: 66 67 68 69 70 71, on right: 41 45


state 0

    0 $accept: . prog_start $end

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2


state 1

    3 prog_start: PROGRAM . IDENT @1 SEMICOLON block END_PROGRAM

    IDENT  shift, and go to state 3


state 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 4


state 3

    3 prog_start: PROGRAM IDENT . @1 SEMICOLON block END_PROGRAM

    $default  reduce using rule 2 (@1)

    @1  go to state 5


state 4

    0 $accept: prog_start $end .

    $default  accept


state 5

    3 prog_start: PROGRAM IDENT @1 . SEMICOLON block END_PROGRAM

    SEMICOLON  shift, and go to state 6


state 6

    3 prog_start: PROGRAM IDENT @1 SEMICOLON . block END_PROGRAM

    IDENT  shift, and go to state 7

    $default  reduce using rule 7 (declarations)

    block         go to state 8
    declarations  go to state 9
    declaration   go to state 10


state 7

    8 declaration: IDENT . more_idents COLON ARRAY L_PAREN NUMBER R_PAREN OF INTEGER
    9            | IDENT . more_idents COLON INTEGER

    COMMA  shift, and go to state 11

    $default  reduce using rule 11 (more_idents)

    more_idents  go to state 12


state 8

    3 prog_start: PROGRAM IDENT @1 SEMICOLON block . END_PROGRAM

    END_PROGRAM  shift, and go to state 13


state 9

    5 block: declarations . BEGIN_PROGRAM @2 statements

    BEGIN_PROGRAM  shift, and go to state 14


state 10

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 15


state 11

   10 more_idents: COMMA . IDENT more_idents

    IDENT  shift, and go to state 16


state 12

    8 declaration: IDENT more_idents . COLON ARRAY L_PAREN NUMBER R_PAREN OF INTEGER
    9            | IDENT more_idents . COLON INTEGER

    COLON  shift, and go to state 17


state 13

    3 prog_start: PROGRAM IDENT @1 SEMICOLON block END_PROGRAM .

    $default  reduce using rule 3 (prog_start)


state 14

    5 block: declarations BEGIN_PROGRAM . @2 statements

    $default  reduce using rule 4 (@2)

    @2  go to state 18


state 15

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 7

    $default  reduce using rule 7 (declarations)

    declarations  go to state 19
    declaration   go to state 10


state 16

   10 more_idents: COMMA IDENT . more_idents

    COMMA  shift, and go to state 11

    $default  reduce using rule 11 (more_idents)

    more_idents  go to state 20


state 17

    8 declaration: IDENT more_idents COLON . ARRAY L_PAREN NUMBER R_PAREN OF INTEGER
    9            | IDENT more_idents COLON . INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


state 18

    5 block: declarations BEGIN_PROGRAM @2 . statements

    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    DO        shift, and go to state 25
    CONTINUE  shift, and go to state 26
    READ      shift, and go to state 27
    WRITE     shift, and go to state 28
    IDENT     shift, and go to state 29

    statements  go to state 30
    statement   go to state 31
    Var         go to state 32


state 19

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


state 20

   10 more_idents: COMMA IDENT more_idents .

    $default  reduce using rule 10 (more_idents)


state 21

    9 declaration: IDENT more_idents COLON INTEGER .

    $default  reduce using rule 9 (declaration)


state 22

    8 declaration: IDENT more_idents COLON ARRAY . L_PAREN NUMBER R_PAREN OF INTEGER

    L_PAREN  shift, and go to state 33


state 23

   16 statement: IF . bool_exp THEN ststatement @3 optionalelse ENDIF

    NOT      shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    L_PAREN  shift, and go to state 37
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    bool_exp            go to state 40
    relation_and_exp    go to state 41
    relation_exp        go to state 42
    Var                 go to state 43
    expression          go to state 44
    multiplicative_exp  go to state 45
    term                go to state 46


state 24

   19 statement: WHILE . @4 bool_exp BEGINLOOP ststatement @5 ENDLOOP

    $default  reduce using rule 17 (@4)

    @4  go to state 47


state 25

   22 statement: DO . BEGINLOOP @6 ststatement @7 ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 48


state 26

   27 statement: CONTINUE .

    $default  reduce using rule 27 (statement)


state 27

   24 statement: READ . @8 Vars

    $default  reduce using rule 23 (@8)

    @8  go to state 49


state 28

   26 statement: WRITE . @9 Vars

    $default  reduce using rule 25 (@9)

    @9  go to state 50


state 29

   49 Var: IDENT .
   50    | IDENT . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 51

    $default  reduce using rule 49 (Var)


state 30

    5 block: declarations BEGIN_PROGRAM @2 statements .
   12 statements: statements . statement SEMICOLON

    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    DO        shift, and go to state 25
    CONTINUE  shift, and go to state 26
    READ      shift, and go to state 27
    WRITE     shift, and go to state 28
    IDENT     shift, and go to state 29

    $default  reduce using rule 5 (block)

    statement  go to state 52
    Var        go to state 32


state 31

   13 statements: statement . SEMICOLON

    SEMICOLON  shift, and go to state 53


state 32

   14 statement: Var . ASSIGN expression

    ASSIGN  shift, and go to state 54


state 33

    8 declaration: IDENT more_idents COLON ARRAY L_PAREN . NUMBER R_PAREN OF INTEGER

    NUMBER  shift, and go to state 55


state 34

   41 relation_exp: NOT . expression comp expression
   42             | NOT . TRUE
   43             | NOT . FALSE
   44             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 56
    FALSE    shift, and go to state 57
    L_PAREN  shift, and go to state 58
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    Var                 go to state 43
    expression          go to state 59
    multiplicative_exp  go to state 45
    term                go to state 46


state 35

   46 relation_exp: TRUE .

    $default  reduce using rule 46 (relation_exp)


state 36

   47 relation_exp: FALSE .

    $default  reduce using rule 47 (relation_exp)


state 37

   48 relation_exp: L_PAREN . bool_exp R_PAREN
   55 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    L_PAREN  shift, and go to state 37
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    bool_exp            go to state 60
    relation_and_exp    go to state 41
    relation_exp        go to state 42
    Var                 go to state 43
    expression          go to state 61
    multiplicative_exp  go to state 45
    term                go to state 46


state 38

   54 term: NUMBER .

    $default  reduce using rule 54 (term)


state 39

   56 term: SUB . Var
   57     | SUB . NUMBER
   58     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 63

    Var  go to state 64


state 40

   16 statement: IF bool_exp . THEN ststatement @3 optionalelse ENDIF

    THEN  shift, and go to state 65


state 41

   35 bool_exp: relation_and_exp . relationexplist

    OR  shift, and go to state 66

    $default  reduce using rule 38 (relationexplist)

    relationexplist  go to state 67


state 42

   36 relation_and_exp: relation_exp . andlist

    AND  shift, and go to state 68

    $default  reduce using rule 40 (andlist)

    andlist  go to state 69


state 43

   53 term: Var .

    $default  reduce using rule 53 (term)


state 44

   45 relation_exp: expression . comp expression

    GTE  shift, and go to state 70
    LTE  shift, and go to state 71
    GT   shift, and go to state 72
    LT   shift, and go to state 73
    NEQ  shift, and go to state 74
    EQ   shift, and go to state 75

    comp  go to state 76


state 45

   51 expression: multiplicative_exp . exprlist

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 65 (exprlist)

    exprlist  go to state 79


state 46

   52 multiplicative_exp: term . terms

    $default  reduce using rule 59 (terms)

    terms  go to state 80


state 47

   19 statement: WHILE @4 . bool_exp BEGINLOOP ststatement @5 ENDLOOP

    NOT      shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    L_PAREN  shift, and go to state 37
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    bool_exp            go to state 81
    relation_and_exp    go to state 41
    relation_exp        go to state 42
    Var                 go to state 43
    expression          go to state 44
    multiplicative_exp  go to state 45
    term                go to state 46


state 48

   22 statement: DO BEGINLOOP . @6 ststatement @7 ENDLOOP WHILE bool_exp

    $default  reduce using rule 20 (@6)

    @6  go to state 82


state 49

   24 statement: READ @8 . Vars

    IDENT  shift, and go to state 29

    Vars  go to state 83
    Var   go to state 84


state 50

   26 statement: WRITE @9 . Vars

    IDENT  shift, and go to state 29

    Vars  go to state 85
    Var   go to state 84


state 51

   50 Var: IDENT L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 86
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    Var                 go to state 43
    expression          go to state 87
    multiplicative_exp  go to state 45
    term                go to state 46


state 52

   12 statements: statements statement . SEMICOLON

    SEMICOLON  shift, and go to state 88


state 53

   13 statements: statement SEMICOLON .

    $default  reduce using rule 13 (statements)


state 54

   14 statement: Var ASSIGN . expression

    L_PAREN  shift, and go to state 86
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    Var                 go to state 43
    expression          go to state 89
    multiplicative_exp  go to state 45
    term                go to state 46


state 55

    8 declaration: IDENT more_idents COLON ARRAY L_PAREN NUMBER . R_PAREN OF INTEGER

    R_PAREN  shift, and go to state 90


state 56

   42 relation_exp: NOT TRUE .

    $default  reduce using rule 42 (relation_exp)


state 57

   43 relation_exp: NOT FALSE .

    $default  reduce using rule 43 (relation_exp)


state 58

   44 relation_exp: NOT L_PAREN . bool_exp R_PAREN
   55 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    L_PAREN  shift, and go to state 37
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    bool_exp            go to state 91
    relation_and_exp    go to state 41
    relation_exp        go to state 42
    Var                 go to state 43
    expression          go to state 61
    multiplicative_exp  go to state 45
    term                go to state 46


state 59

   41 relation_exp: NOT expression . comp expression

    GTE  shift, and go to state 70
    LTE  shift, and go to state 71
    GT   shift, and go to state 72
    LT   shift, and go to state 73
    NEQ  shift, and go to state 74
    EQ   shift, and go to state 75

    comp  go to state 92


state 60

   48 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 93


state 61

   45 relation_exp: expression . comp expression
   55 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 94
    GTE      shift, and go to state 70
    LTE      shift, and go to state 71
    GT       shift, and go to state 72
    LT       shift, and go to state 73
    NEQ      shift, and go to state 74
    EQ       shift, and go to state 75

    comp  go to state 76


state 62

   58 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 86
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    Var                 go to state 43
    expression          go to state 95
    multiplicative_exp  go to state 45
    term                go to state 46


state 63

   57 term: SUB NUMBER .

    $default  reduce using rule 57 (term)


state 64

   56 term: SUB Var .

    $default  reduce using rule 56 (term)


state 65

   16 statement: IF bool_exp THEN . ststatement @3 optionalelse ENDIF

    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    DO        shift, and go to state 25
    CONTINUE  shift, and go to state 26
    READ      shift, and go to state 27
    WRITE     shift, and go to state 28
    IDENT     shift, and go to state 29

    $default  reduce using rule 31 (ststatement)

    statement    go to state 96
    ststatement  go to state 97
    Var          go to state 32


state 66

   37 relationexplist: OR . relation_and_exp relationexplist

    NOT      shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    L_PAREN  shift, and go to state 37
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    relation_and_exp    go to state 98
    relation_exp        go to state 42
    Var                 go to state 43
    expression          go to state 44
    multiplicative_exp  go to state 45
    term                go to state 46


state 67

   35 bool_exp: relation_and_exp relationexplist .

    $default  reduce using rule 35 (bool_exp)


state 68

   39 andlist: AND . relation_exp andlist

    NOT      shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    L_PAREN  shift, and go to state 37
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    relation_exp        go to state 99
    Var                 go to state 43
    expression          go to state 44
    multiplicative_exp  go to state 45
    term                go to state 46


state 69

   36 relation_and_exp: relation_exp andlist .

    $default  reduce using rule 36 (relation_and_exp)


state 70

   71 comp: GTE .

    $default  reduce using rule 71 (comp)


state 71

   70 comp: LTE .

    $default  reduce using rule 70 (comp)


state 72

   69 comp: GT .

    $default  reduce using rule 69 (comp)


state 73

   68 comp: LT .

    $default  reduce using rule 68 (comp)


state 74

   67 comp: NEQ .

    $default  reduce using rule 67 (comp)


state 75

   66 comp: EQ .

    $default  reduce using rule 66 (comp)


state 76

   45 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 86
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    Var                 go to state 43
    expression          go to state 100
    multiplicative_exp  go to state 45
    term                go to state 46


state 77

   63 exprlist: ADD . multiplicative_exp exprlist

    L_PAREN  shift, and go to state 86
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    Var                 go to state 43
    multiplicative_exp  go to state 101
    term                go to state 46


state 78

   64 exprlist: SUB . multiplicative_exp exprlist

    L_PAREN  shift, and go to state 86
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    Var                 go to state 43
    multiplicative_exp  go to state 102
    term                go to state 46


state 79

   51 expression: multiplicative_exp exprlist .

    $default  reduce using rule 51 (expression)


state 80

   52 multiplicative_exp: term terms .
   60 terms: terms . MULT term
   61      | terms . DIV term
   62      | terms . MOD term

    MOD   shift, and go to state 103
    DIV   shift, and go to state 104
    MULT  shift, and go to state 105

    $default  reduce using rule 52 (multiplicative_exp)


state 81

   19 statement: WHILE @4 bool_exp . BEGINLOOP ststatement @5 ENDLOOP

    BEGINLOOP  shift, and go to state 106


state 82

   22 statement: DO BEGINLOOP @6 . ststatement @7 ENDLOOP WHILE bool_exp

    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    DO        shift, and go to state 25
    CONTINUE  shift, and go to state 26
    READ      shift, and go to state 27
    WRITE     shift, and go to state 28
    IDENT     shift, and go to state 29

    $default  reduce using rule 31 (ststatement)

    statement    go to state 96
    ststatement  go to state 107
    Var          go to state 32


state 83

   24 statement: READ @8 Vars .
   28 Vars: Vars . COMMA Var

    COMMA  shift, and go to state 108

    $default  reduce using rule 24 (statement)


state 84

   29 Vars: Var .

    $default  reduce using rule 29 (Vars)


state 85

   26 statement: WRITE @9 Vars .
   28 Vars: Vars . COMMA Var

    COMMA  shift, and go to state 108

    $default  reduce using rule 26 (statement)


state 86

   55 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 86
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    Var                 go to state 43
    expression          go to state 109
    multiplicative_exp  go to state 45
    term                go to state 46


state 87

   50 Var: IDENT L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110


state 88

   12 statements: statements statement SEMICOLON .

    $default  reduce using rule 12 (statements)


state 89

   14 statement: Var ASSIGN expression .

    $default  reduce using rule 14 (statement)


state 90

    8 declaration: IDENT more_idents COLON ARRAY L_PAREN NUMBER R_PAREN . OF INTEGER

    OF  shift, and go to state 111


state 91

   44 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 112


state 92

   41 relation_exp: NOT expression comp . expression

    L_PAREN  shift, and go to state 86
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    Var                 go to state 43
    expression          go to state 113
    multiplicative_exp  go to state 45
    term                go to state 46


state 93

   48 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 48 (relation_exp)


state 94

   55 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 55 (term)


state 95

   58 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 114


state 96

   30 ststatement: statement . SEMICOLON ststatement

    SEMICOLON  shift, and go to state 115


state 97

   16 statement: IF bool_exp THEN ststatement . @3 optionalelse ENDIF

    $default  reduce using rule 15 (@3)

    @3  go to state 116


state 98

   37 relationexplist: OR relation_and_exp . relationexplist

    OR  shift, and go to state 66

    $default  reduce using rule 38 (relationexplist)

    relationexplist  go to state 117


state 99

   39 andlist: AND relation_exp . andlist

    AND  shift, and go to state 68

    $default  reduce using rule 40 (andlist)

    andlist  go to state 118


state 100

   45 relation_exp: expression comp expression .

    $default  reduce using rule 45 (relation_exp)


state 101

   63 exprlist: ADD multiplicative_exp . exprlist

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 65 (exprlist)

    exprlist  go to state 119


state 102

   64 exprlist: SUB multiplicative_exp . exprlist

    ADD  shift, and go to state 77
    SUB  shift, and go to state 78

    $default  reduce using rule 65 (exprlist)

    exprlist  go to state 120


state 103

   62 terms: terms MOD . term

    L_PAREN  shift, and go to state 86
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    Var   go to state 43
    term  go to state 121


state 104

   61 terms: terms DIV . term

    L_PAREN  shift, and go to state 86
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    Var   go to state 43
    term  go to state 122


state 105

   60 terms: terms MULT . term

    L_PAREN  shift, and go to state 86
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    Var   go to state 43
    term  go to state 123


state 106

   19 statement: WHILE @4 bool_exp BEGINLOOP . ststatement @5 ENDLOOP

    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    DO        shift, and go to state 25
    CONTINUE  shift, and go to state 26
    READ      shift, and go to state 27
    WRITE     shift, and go to state 28
    IDENT     shift, and go to state 29

    $default  reduce using rule 31 (ststatement)

    statement    go to state 96
    ststatement  go to state 124
    Var          go to state 32


state 107

   22 statement: DO BEGINLOOP @6 ststatement . @7 ENDLOOP WHILE bool_exp

    $default  reduce using rule 21 (@7)

    @7  go to state 125


state 108

   28 Vars: Vars COMMA . Var

    IDENT  shift, and go to state 29

    Var  go to state 126


state 109

   55 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 94


state 110

   50 Var: IDENT L_PAREN expression R_PAREN .

    $default  reduce using rule 50 (Var)


state 111

    8 declaration: IDENT more_idents COLON ARRAY L_PAREN NUMBER R_PAREN OF . INTEGER

    INTEGER  shift, and go to state 127


state 112

   44 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 44 (relation_exp)


state 113

   41 relation_exp: NOT expression comp expression .

    $default  reduce using rule 41 (relation_exp)


state 114

   58 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term)


state 115

   30 ststatement: statement SEMICOLON . ststatement

    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    DO        shift, and go to state 25
    CONTINUE  shift, and go to state 26
    READ      shift, and go to state 27
    WRITE     shift, and go to state 28
    IDENT     shift, and go to state 29

    $default  reduce using rule 31 (ststatement)

    statement    go to state 96
    ststatement  go to state 128
    Var          go to state 32


state 116

   16 statement: IF bool_exp THEN ststatement @3 . optionalelse ENDIF

    ELSE  shift, and go to state 129

    $default  reduce using rule 34 (optionalelse)

    optionalelse  go to state 130


state 117

   37 relationexplist: OR relation_and_exp relationexplist .

    $default  reduce using rule 37 (relationexplist)


state 118

   39 andlist: AND relation_exp andlist .

    $default  reduce using rule 39 (andlist)


state 119

   63 exprlist: ADD multiplicative_exp exprlist .

    $default  reduce using rule 63 (exprlist)


state 120

   64 exprlist: SUB multiplicative_exp exprlist .

    $default  reduce using rule 64 (exprlist)


state 121

   62 terms: terms MOD term .

    $default  reduce using rule 62 (terms)


state 122

   61 terms: terms DIV term .

    $default  reduce using rule 61 (terms)


state 123

   60 terms: terms MULT term .

    $default  reduce using rule 60 (terms)


state 124

   19 statement: WHILE @4 bool_exp BEGINLOOP ststatement . @5 ENDLOOP

    $default  reduce using rule 18 (@5)

    @5  go to state 131


state 125

   22 statement: DO BEGINLOOP @6 ststatement @7 . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 132


state 126

   28 Vars: Vars COMMA Var .

    $default  reduce using rule 28 (Vars)


state 127

    8 declaration: IDENT more_idents COLON ARRAY L_PAREN NUMBER R_PAREN OF INTEGER .

    $default  reduce using rule 8 (declaration)


state 128

   30 ststatement: statement SEMICOLON ststatement .

    $default  reduce using rule 30 (ststatement)


state 129

   33 optionalelse: ELSE . @10 ststatement

    $default  reduce using rule 32 (@10)

    @10  go to state 133


state 130

   16 statement: IF bool_exp THEN ststatement @3 optionalelse . ENDIF

    ENDIF  shift, and go to state 134


state 131

   19 statement: WHILE @4 bool_exp BEGINLOOP ststatement @5 . ENDLOOP

    ENDLOOP  shift, and go to state 135


state 132

   22 statement: DO BEGINLOOP @6 ststatement @7 ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 136


state 133

   33 optionalelse: ELSE @10 . ststatement

    IF        shift, and go to state 23
    WHILE     shift, and go to state 24
    DO        shift, and go to state 25
    CONTINUE  shift, and go to state 26
    READ      shift, and go to state 27
    WRITE     shift, and go to state 28
    IDENT     shift, and go to state 29

    $default  reduce using rule 31 (ststatement)

    statement    go to state 96
    ststatement  go to state 137
    Var          go to state 32


state 134

   16 statement: IF bool_exp THEN ststatement @3 optionalelse ENDIF .

    $default  reduce using rule 16 (statement)


state 135

   19 statement: WHILE @4 bool_exp BEGINLOOP ststatement @5 ENDLOOP .

    $default  reduce using rule 19 (statement)


state 136

   22 statement: DO BEGINLOOP @6 ststatement @7 ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 34
    TRUE     shift, and go to state 35
    FALSE    shift, and go to state 36
    L_PAREN  shift, and go to state 37
    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 38
    SUB      shift, and go to state 39

    bool_exp            go to state 138
    relation_and_exp    go to state 41
    relation_exp        go to state 42
    Var                 go to state 43
    expression          go to state 44
    multiplicative_exp  go to state 45
    term                go to state 46


state 137

   33 optionalelse: ELSE @10 ststatement .

    $default  reduce using rule 33 (optionalelse)


state 138

   22 statement: DO BEGINLOOP @6 ststatement @7 ENDLOOP WHILE bool_exp .

    $default  reduce using rule 22 (statement)
